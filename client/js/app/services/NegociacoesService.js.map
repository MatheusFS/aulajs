{"version":3,"sources":["../../app-es6/services/NegociacoesService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacoesService","_http","Promise","resolve","reject","get","then","negociacoes","map","Date","objeto","data","quantidade","valor","catch","console","log","err","all","getNegociacoesSemana","getNegociacoesSemanaAnterior","getNegociacoesSemanaRetrasada","periodos","reduce","uniqueArray","array","concat","negociacao","Error","getConnection","connection","dao","insert","selectAll","deleteAll","listaNegociacoes","getNegociacoes","filter","some","JSON","stringify","negociacaoIn"],"mappings":"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","file":"NegociacoesService.js","sourcesContent":["import { HttpService } from './HttpService';\r\nimport { ConnectionFactory } from './ConnectionFactory';\r\nimport { NegociacaoDao } from '../dao/NegociacaoDao';\r\nimport { Negociacao } from '../models/Negociacao';\r\n\r\nexport class NegociacoesService {\r\n\r\n    constructor() {\r\n\r\n        this._http = new HttpService();\r\n    }\r\n\r\n\r\n    getNegociacoesSemana() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/semana')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    reject('Não foi possível obter as negociações da semana')\r\n                })\r\n        })\r\n    }\r\n    getNegociacoesSemanaAnterior() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/anterior')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    reject('Não foi possível obter as negociações da semana anterior')\r\n                })\r\n        })\r\n    }\r\n    getNegociacoesSemanaRetrasada() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/retrasada')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    reject('Não foi possível obter as negociações da semana retrasada')\r\n                })\r\n        })\r\n    }\r\n\r\n    getNegociacoes() {\r\n\r\n        return Promise.all([\r\n            this.getNegociacoesSemana(),\r\n            this.getNegociacoesSemanaAnterior(),\r\n            this.getNegociacoesSemanaRetrasada()\r\n        ])\r\n            .then(periodos => {\r\n\r\n                let negociacoes = periodos\r\n                    .reduce((uniqueArray, array) => uniqueArray.concat(array), [])\r\n                    .map(negociacao => new Negociacao(new Date(negociacao.data), negociacao.quantidade, negociacao.valor));\r\n\r\n                return negociacoes;\r\n            })\r\n            .catch(err => {\r\n                throw new Error(err);\r\n            });\r\n    }\r\n\r\n    insert(negociacao) {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.insert(negociacao))\r\n            .then(() => 'Negociação adicionada com sucesso!')\r\n            .catch(err => {\r\n                console.log(err);\r\n                throw new Error('Não foi possível adicionar a negociacao')\r\n            });\r\n    }\r\n\r\n    render() {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.selectAll())\r\n            .catch(err => {\r\n                console.log(err);\r\n                throw new Error('Não foi possivel listar as negociações')\r\n            });\r\n    }\r\n\r\n    empty() {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.deleteAll())\r\n            .then(() => 'Lista negociações limpa!')\r\n            .catch(err => {\r\n                console.log(err);\r\n                throw new Error('Não foi possível limpar a lista de negociações')\r\n            });\r\n    }\r\n\r\n    import(listaNegociacoes) {\r\n\r\n        return this.getNegociacoes()\r\n            .then(negociacoes =>\r\n                negociacoes.filter(negociacao =>\r\n                    !listaNegociacoes.negociacoes.some(negociacaoIn =>\r\n                        JSON.stringify(negociacaoIn) == JSON.stringify(negociacao)))\r\n            )\r\n            .catch(err => {\r\n                console.log(err);\r\n                throw new Error('Não foi possível importar as negociações');\r\n            });\r\n    }\r\n}"]}