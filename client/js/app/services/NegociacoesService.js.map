{"version":3,"sources":["../../app-es6/services/NegociacoesService.js"],"names":["NegociacoesService","_http","HttpService","Promise","resolve","reject","get","then","negociacoes","map","Negociacao","Date","objeto","data","quantidade","valor","catch","console","log","err","all","getNegociacoesSemana","getNegociacoesSemanaAnterior","getNegociacoesSemanaRetrasada","periodos","reduce","uniqueArray","array","concat","negociacao","Error","ConnectionFactory","getConnection","NegociacaoDao","connection","dao","insert","selectAll","deleteAll","listaNegociacoes","getNegociacoes","filter","some","JSON","stringify","negociacaoIn"],"mappings":"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","file":"NegociacoesService.js","sourcesContent":["class NegociacoesService {\r\n\r\n    constructor(){\r\n\r\n        this._http = new HttpService();\r\n    }\r\n\r\n\r\n    getNegociacoesSemana(){\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/semana')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    reject('Não foi possível obter as negociações da semana')\r\n                })\r\n        })\r\n    }\r\n    getNegociacoesSemanaAnterior(){\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/anterior')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    reject('Não foi possível obter as negociações da semana anterior')\r\n                })\r\n        })\r\n    }\r\n    getNegociacoesSemanaRetrasada(){\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/retrasada')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    reject('Não foi possível obter as negociações da semana retrasada')\r\n                })\r\n        })\r\n    }\r\n\r\n    getNegociacoes(){\r\n\r\n        return Promise.all([\r\n            this.getNegociacoesSemana(),\r\n            this.getNegociacoesSemanaAnterior(),\r\n            this.getNegociacoesSemanaRetrasada()\r\n        ])\r\n            .then(periodos =>{\r\n\r\n                let negociacoes = periodos\r\n                    .reduce((uniqueArray, array) => uniqueArray.concat(array), [])\r\n                    .map(negociacao => new Negociacao(new Date(negociacao.data), negociacao.quantidade, negociacao.valor));\r\n\r\n                return negociacoes;\r\n            })\r\n            .catch(err => {\r\n                throw new Error(err);\r\n            });\r\n    }\r\n\r\n    insert(negociacao){\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.insert(negociacao))\r\n            .then(() => 'Negociação adicionada com sucesso!')\r\n            .catch(err => {\r\n                console.log(err);\r\n                throw new Error('Não foi possível adicionar a negociacao')\r\n            });\r\n    }\r\n\r\n    render(){\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.selectAll())\r\n            .catch(err => {\r\n                console.log(err);\r\n                throw new Error('Não foi possivel listar as negociações')\r\n            });\r\n    }\r\n\r\n    empty(){\r\n\r\n        return ConnectionFactory\r\n        .getConnection()\r\n        .then(connection => new NegociacaoDao(connection))\r\n        .then(dao => dao.deleteAll())\r\n        .then(() => 'Lista negociações limpa!')\r\n        .catch(err => {\r\n            console.log(err);\r\n            throw new Error('Não foi possível limpar a lista de negociações')\r\n        });\r\n    }\r\n\r\n    import(listaNegociacoes){\r\n\r\n        return this.getNegociacoes()\r\n            .then(negociacoes =>\r\n                negociacoes.filter(negociacao =>\r\n                    !listaNegociacoes.negociacoes.some(negociacaoIn =>\r\n                        JSON.stringify(negociacaoIn) == JSON.stringify(negociacao)))\r\n            )\r\n            .catch(err => {\r\n                console.log(err);\r\n                throw new Error('Não foi possível importar as negociações');\r\n            });\r\n    }\r\n}"]}