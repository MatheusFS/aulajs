{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_conn","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","e","target","error","name","cursor","openCursor","negociacoes","current","result","value","push","Negociacao","_data","_quantidade","_valor","continue","console","log","clear"],"mappings":";;;;;;IAAMA,a;AAEF,2BAAYC,UAAZ,EAAuB;AAAA;;AAEnB,aAAKC,KAAL,GAAaD,UAAb;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;+BAEMC,U,EAAW;AAAA;;AAEd,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIC,UAAU,MAAKN,KAAL,CACTO,WADS,CACG,CAAC,MAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,UAHK,CAAd;;AAKAI,wBAAQI,SAAR,GAAoB;AAAA,2BAAMN,SAAN;AAAA,iBAApB;AACAE,wBAAQK,OAAR,GAAkB;AAAA,2BAAKN,OAAOO,EAAEC,MAAF,CAASC,KAAT,CAAeC,IAAtB,CAAL;AAAA,iBAAlB;AACH,aATM,CAAP;AAUH;;;oCAEW;AAAA;;AAER,mBAAO,IAAIZ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIW,SAAS,OAAKhB,KAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,UADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRgB,UAHQ,EAAb;AAIA,oBAAIC,cAAc,EAAlB;;AAEAF,uBAAON,SAAP,GAAmB,aAAK;;AAEpB,wBAAIS,UAAUP,EAAEC,MAAF,CAASO,MAAvB;;AAEA,wBAAGD,OAAH,EAAW;;AAEP,4BAAIjB,aAAaiB,QAAQE,KAAzB;AACAH,oCAAYI,IAAZ,CAAiB,IAAIC,UAAJ,CAAerB,WAAWsB,KAA1B,EAAiCtB,WAAWuB,WAA5C,EAAyDvB,WAAWwB,MAApE,CAAjB;;AAEAP,gCAAQQ,QAAR;AACH,qBAND,MAMK;;AAEDvB,gCAAQc,WAAR;AACH;AACJ,iBAdD;;AAgBAF,uBAAOL,OAAP,GAAiB,aAAK;;AAElBiB,4BAAQC,GAAR,CAAYjB,EAAEC,MAAF,CAASC,KAAT,CAAeC,IAA3B;AACAV,2BAAO,4CAAP;AACH,iBAJD;AAKH,aA7BM,CAAP;AA8BH;;;oCAEU;AAAA;;AAEP,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIC,UAAU,OAAKN,KAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT6B,KAHS,EAAd;;AAKAxB,wBAAQI,SAAR,GAAoB;AAAA,2BAAKN,QAAQ,yCAAR,CAAL;AAAA,iBAApB;AACAE,wBAAQK,OAAR,GAAkB;AAAA,2BAAKN,OAAOO,EAAEC,MAAF,CAASC,KAAT,CAAeC,IAAtB,CAAL;AAAA,iBAAlB;AAEH,aAVM,CAAP;AAWH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\r\n\r\n    constructor(connection){\r\n\r\n        this._conn = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    insert(negociacao){\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let request = this._conn\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add(negociacao);\r\n\r\n            request.onsuccess = () => resolve();\r\n            request.onerror = e => reject(e.target.error.name);\r\n        });\r\n    }\r\n\r\n    selectAll() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let cursor = this._conn\r\n                .transaction([this._store], 'readonly')\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = e => {\r\n\r\n                let current = e.target.result;\r\n\r\n                if(current){\r\n\r\n                    let negociacao = current.value;\r\n                    negociacoes.push(new Negociacao(negociacao._data, negociacao._quantidade, negociacao._valor));\r\n\r\n                    current.continue();\r\n                }else{\r\n\r\n                    resolve(negociacoes);\r\n                }\r\n            };\r\n\r\n            cursor.onerror = e => {\r\n\r\n                console.log(e.target.error.name);\r\n                reject('Não foi possível selecionar as negociações');\r\n            };\r\n        });\r\n    }\r\n\r\n    deleteAll(){\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let request = this._conn\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .clear();\r\n\r\n            request.onsuccess = e => resolve('Negociacoes removidas com sucesso (DAO)');\r\n            request.onerror = e => reject(e.target.error.name);\r\n\r\n        });\r\n    }\r\n}"]}